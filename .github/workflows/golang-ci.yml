name: Build and Release Pipeline

on:
  pull_request:
    # This workflow will run on every pull request to any branch.
  push:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering from GitHub UI for testing

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: ${{ secrets.CLOUD_RUN_SERVICE_NAME }}
  GAR_REPO: ${{ secrets.GAR_REPOSITORY_NAME }}
  IMAGE_NAME: ${{ secrets.GAR_IMAGE_NAME }}
  # Workload Identity Federation details (also from secrets)
  WORKLOAD_IDENTITY_POOL_NAME: ${{ secrets.WORKLOAD_IDENTITY_POOL_NAME }}
  WORKLOAD_IDENTITY_PROVIDER_NAME: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_NAME }}

jobs:
  # This job will execute on every pull_request and every push to master.
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"

      - name: Download Go modules
        run: go mod download

      - name: Run Go tests
        run: go test ./... -v

  # This job will only run IF the 'test' job passes successfully.
  # It will ONLY execute on pushes to the 'master' branch.
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: test # This job depends on the 'test' job succeeding.
    if: github.ref == 'refs/heads/master'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (Workload Identity Federation)
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/${{ env.WORKLOAD_IDENTITY_POOL_NAME }}/providers/${{ env.WORKLOAD_IDENTITY_PROVIDER_NAME }}'
          # Construct the service account email using the PROJECT_ID from env
          service_account: 'github-actions-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image to Artifact Registry
        run: 
            # Build the Docker image, tagging it with the commit SHA for unique identification
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} # Push the built image to Google Artifact Registry

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}