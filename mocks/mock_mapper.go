// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/mapper/mapper.go
//
// Generated by this command:
//
//	mockgen -source=pkg/mapper/mapper.go -destination=mocks/mock_mapper.go -package=mocks ICampaignMapper
//

// Package mocks is a generated GoMock package.
package mocks

import (
	models "campaigns/pkg/models"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockICampaignMapper is a mock of ICampaignMapper interface.
type MockICampaignMapper struct {
	ctrl     *gomock.Controller
	recorder *MockICampaignMapperMockRecorder
	isgomock struct{}
}

// MockICampaignMapperMockRecorder is the mock recorder for MockICampaignMapper.
type MockICampaignMapperMockRecorder struct {
	mock *MockICampaignMapper
}

// NewMockICampaignMapper creates a new mock instance.
func NewMockICampaignMapper(ctrl *gomock.Controller) *MockICampaignMapper {
	mock := &MockICampaignMapper{ctrl: ctrl}
	mock.recorder = &MockICampaignMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICampaignMapper) EXPECT() *MockICampaignMapperMockRecorder {
	return m.recorder
}

// GetTargetedCampaigns mocks base method.
func (m *MockICampaignMapper) GetTargetedCampaigns(ctx context.Context, req models.DeliveryRequest) []models.DeliveryResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargetedCampaigns", ctx, req)
	ret0, _ := ret[0].([]models.DeliveryResponse)
	return ret0
}

// GetTargetedCampaigns indicates an expected call of GetTargetedCampaigns.
func (mr *MockICampaignMapperMockRecorder) GetTargetedCampaigns(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetedCampaigns", reflect.TypeOf((*MockICampaignMapper)(nil).GetTargetedCampaigns), ctx, req)
}
